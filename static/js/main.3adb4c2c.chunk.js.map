{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Clock","props","state","mm","ss","timerLabel","breakLenght","sessionLenght","startStop","running","pause","runClass","handleBreakIncrement","bind","handleBreakDecrement","handleSessionIncrement","handleSessionDecrement","handleReset","handleStartStop","handleTimePreset","audio","React","createRef","this","val","setState","current","currentTime","interval","setInterval","play","clearInterval","newBreakLenght","newSessionLenght","className","id","onClick","ref","src","Component","App","target","rel","href","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6SAIMA,G,8DACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,GAAI,GACJC,GAAI,EACJC,WAAY,UACZC,YAAa,GACbC,cAAe,GACfC,UAAW,QACXC,SAAS,EACTC,OAAO,EACPC,SAAU,eAEZ,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,uBAAyB,EAAKA,uBAAuBF,KAA5B,gBAC9B,EAAKG,uBAAyB,EAAKA,uBAAuBH,KAA5B,gBAC9B,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAKM,iBAAmB,EAAKA,iBAAiBN,KAAtB,gBACxB,EAAKO,MAAQC,IAAMC,YApBF,E,mEAwBjB,IAAKC,KAAKrB,MAAMO,QAAS,CACvB,IAAIe,EAAMD,KAAKrB,MAAMI,YACT,MAARkB,GACFD,KAAKE,SAAS,CACZnB,YAAckB,GAAO,O,6CAO3B,IAAKD,KAAKrB,MAAMO,QAAS,CACvB,IAAIe,EAAMD,KAAKrB,MAAMI,YACT,IAARkB,GACFD,KAAKE,SAAS,CACZnB,YAAckB,GAAO,O,+CAO3B,IAAKD,KAAKrB,MAAMO,QAAS,CACvB,IAAIe,EAAMD,KAAKrB,MAAMK,cACT,MAARiB,GACFD,KAAKE,SAAS,CACZlB,cAAgBiB,GAAO,EACvBrB,GAAIqB,O,+CAOV,IAAKD,KAAKrB,MAAMO,QAAS,CACvB,IAAIe,EAAMD,KAAKrB,MAAMK,cACT,IAARiB,GACFD,KAAKE,SAAS,CACZlB,cAAgBiB,GAAO,EACvBrB,GAAIqB,O,oCAOVD,KAAKE,SAAS,CACZtB,GAAI,GACJC,GAAI,EACJC,WAAY,UACZC,YAAa,GACbC,cAAe,GACfC,UAAW,QACXC,SAAS,IAEXc,KAAKH,MAAMM,QAAQhB,QACnBa,KAAKH,MAAMM,QAAQC,YAAc,I,wCAGhB,IAAD,OACVlB,EAAYc,KAAKrB,MAAjBO,QACNA,GAAWA,EACXc,KAAKE,SAAS,CACZjB,UAAWC,EAAU,OAAS,QAC9BE,SAAUF,EAAU,aAAe,cACnCA,QAASA,IAGNc,KAAKrB,MAAMO,SACdc,KAAKE,SAAS,CACZf,OAAO,IAGNa,KAAKrB,MAAMQ,OACda,KAAKE,SAAS,CACZpB,WAAY,UACZF,GAAIoB,KAAKrB,MAAMK,cACfH,GAAI,IAIR,IA6BMwB,EAAWC,aA7BH,WAAO,IAAD,EACD,EAAK3B,MAAhBC,EADY,EACZA,GAAIC,EADQ,EACRA,GACN,EAAKF,MAAMO,QACW,IAAlB,EAAKP,MAAME,GACf,EAAKqB,SAAS,CACZrB,GAAIA,EAAK,IAEkB,IAAlB,EAAKF,MAAMC,GACtB,EAAKsB,SAAS,CACZtB,GAAIA,EAAK,EACTC,GAAI,MAGN,EAAKgB,MAAMM,QAAQI,OACnB,EAAKL,SAAS,CACZpB,WAC4B,YAA1B,EAAKH,MAAMG,WAA2B,QAAU,UAClDF,GAC4B,YAA1B,EAAKD,MAAMG,WACP,EAAKH,MAAMI,YACX,EAAKJ,MAAMK,cACjBH,GAAI,KAIR2B,cAAcH,KAIkB,O,uCAGrBI,EAAgBC,GAE/BD,GADAA,EAAiBA,EAAiB,IAAM,IAAMA,GACZ,EAAI,EAAIA,EAE1CC,GADAA,EAAmBA,EAAmB,IAAM,IAAMA,GACZ,EAAI,EAAIA,EAE9CV,KAAKE,SAAS,CACZtB,GAAI8B,EACJ7B,GAAI,EACJC,WAAY,UACZC,YAAa0B,EACbzB,cAAe0B,EACfzB,UAAW,QACXC,SAAS,IAEXc,KAAKH,MAAMM,QAAQhB,QACnBa,KAAKH,MAAMM,QAAQC,YAAc,I,+BAGzB,IAAD,SASHJ,KAAKrB,MAPPC,EAFK,EAELA,GACAC,EAHK,EAGLA,GACAC,EAJK,EAILA,WACAC,EALK,EAKLA,YACAC,EANK,EAMLA,cACAC,EAPK,EAOLA,UACAG,EARK,EAQLA,SAGF,OACE,yBAAKuB,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKC,GAAG,eAAe9B,GACvB,yBAAK8B,GAAG,aACLhC,GAAM,GAAKA,EAAK,IAAMA,EADzB,IAC8BC,GAAM,GAAKA,EAAK,IAAMA,IAItD,yBAAK8B,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKC,GAAG,eAAR,gBACA,yBAAKA,GAAG,gBAAgB7B,GACxB,yBAAK4B,UAAU,WACb,4BACEA,UAAU,MACVC,GAAG,kBACHC,QAASb,KAAKX,sBAEd,uBAAGsB,UAAU,oBAEf,4BACEA,UAAU,WACVC,GAAG,kBACHC,QAASb,KAAKT,sBAEd,uBAAGoB,UAAU,wBAKnB,yBAAKA,UAAU,eACb,yBAAKC,GAAG,iBAAR,kBACA,yBAAKA,GAAG,kBAAkB5B,GAC1B,yBAAK2B,UAAU,WACb,4BACEA,UAAU,MACVC,GAAG,oBACHC,QAASb,KAAKR,wBAEd,uBAAGmB,UAAU,oBAEf,4BACEA,UAAU,WACVC,GAAG,oBACHC,QAASb,KAAKP,wBAEd,uBAAGkB,UAAU,yBAMrB,yBAAKA,UAAU,eACb,4BACEA,UAAWvB,EACXwB,GAAG,aACHC,QAASb,KAAKL,iBAEbV,IAOL,yBAAK0B,UAAU,eACb,4BACEA,UAAU,qBACVE,QAAS,kBAAM,EAAKjB,iBAAiB,EAAG,MAF1C,QAOA,4BACEe,UAAU,qBACVE,QAAS,kBAAM,EAAKjB,iBAAiB,EAAG,MAF1C,QAOA,4BACEe,UAAU,qBACVE,QAAS,kBAAM,EAAKjB,iBAAiB,GAAI,MAF3C,UAOF,yBAAKe,UAAU,eACb,4BACEA,UAAU,qBACVE,QAAS,kBAAM,EAAKjB,iBAAiB,GAAI,MAF3C,SAOA,4BACEe,UAAU,qBACVE,QAAS,kBAAM,EAAKjB,iBAAiB,GAAI,MAF3C,SAOA,4BACEe,UAAU,qBACVE,QAAS,kBAAM,EAAKjB,iBAAiB,GAAI,OAF3C,WAOF,2BACEgB,GAAG,OACHE,IAAKd,KAAKH,MACVkB,IAAI,mH,GAzRMjB,IAAMkB,YA6TXC,MA7Bf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKN,UAAU,mBACb,yBAAKA,UAAU,QACb,uBACEO,OAAO,SACPC,IAAI,sBACJC,KAAK,iDAEL,uBAAGC,MAAM,iBALX,gBASF,yBAAKV,UAAU,QACb,uBACEO,OAAO,SACPC,IAAI,sBACJC,KAAK,oCAEL,uBAAGC,MAAM,kBALX,mBCxSUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3adb4c2c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./App.css\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mm: 50,\n      ss: 0,\n      timerLabel: \"session\",\n      breakLenght: 10,\n      sessionLenght: 50,\n      startStop: \"start\",\n      running: false,\n      pause: false,\n      runClass: \"blue_button\",\n    };\n    this.handleBreakIncrement = this.handleBreakIncrement.bind(this);\n    this.handleBreakDecrement = this.handleBreakDecrement.bind(this);\n    this.handleSessionIncrement = this.handleSessionIncrement.bind(this);\n    this.handleSessionDecrement = this.handleSessionDecrement.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleStartStop = this.handleStartStop.bind(this);\n    this.handleTimePreset = this.handleTimePreset.bind(this);\n    this.audio = React.createRef();\n  }\n\n  handleBreakIncrement() {\n    if (!this.state.running) {\n      let val = this.state.breakLenght;\n      if (val !== 120) {\n        this.setState({\n          breakLenght: (val += 1),\n        });\n      }\n    }\n  }\n\n  handleBreakDecrement() {\n    if (!this.state.running) {\n      let val = this.state.breakLenght;\n      if (val !== 1) {\n        this.setState({\n          breakLenght: (val -= 1),\n        });\n      }\n    }\n  }\n\n  handleSessionIncrement() {\n    if (!this.state.running) {\n      let val = this.state.sessionLenght;\n      if (val !== 120) {\n        this.setState({\n          sessionLenght: (val += 1),\n          mm: val,\n        });\n      }\n    }\n  }\n\n  handleSessionDecrement() {\n    if (!this.state.running) {\n      let val = this.state.sessionLenght;\n      if (val !== 1) {\n        this.setState({\n          sessionLenght: (val -= 1),\n          mm: val,\n        });\n      }\n    }\n  }\n\n  handleReset() {\n    this.setState({\n      mm: 50,\n      ss: 0,\n      timerLabel: \"session\",\n      breakLenght: 10,\n      sessionLenght: 50,\n      startStop: \"start\",\n      running: false,\n    });\n    this.audio.current.pause();\n    this.audio.current.currentTime = 0;\n  }\n\n  handleStartStop() {\n    let { running } = this.state;\n    running = !running;\n    this.setState({\n      startStop: running ? \"stop\" : \"start\",\n      runClass: running ? \"red_button\" : \"blue_button\",\n      running: running,\n    });\n    // the first time set all as default, that helps to switch inside of the interval\n    if (!this.state.running) {\n      this.setState({\n        pause: true,\n      });\n    }\n    if (!this.state.pause) {\n      this.setState({\n        timerLabel: \"session\",\n        mm: this.state.sessionLenght,\n        ss: 0,\n      });\n    }\n\n    const timer = () => {\n      let { mm, ss } = this.state;\n      if (this.state.running) {\n        if (!(this.state.ss === 0)) {\n          this.setState({\n            ss: ss - 1,\n          });\n        } else if (!(this.state.mm === 0)) {\n          this.setState({\n            mm: mm - 1,\n            ss: 59,\n          });\n        } else {\n          this.audio.current.play();\n          this.setState({\n            timerLabel:\n              this.state.timerLabel === \"session\" ? \"break\" : \"session\",\n            mm:\n              this.state.timerLabel === \"session\"\n                ? this.state.breakLenght\n                : this.state.sessionLenght,\n            ss: 0,\n          });\n        }\n      } else {\n        clearInterval(interval);\n      }\n    };\n\n    const interval = setInterval(timer, 1000);\n  }\n\n  handleTimePreset(newBreakLenght, newSessionLenght) {\n    newBreakLenght = newBreakLenght > 120 ? 120 : newBreakLenght;\n    newBreakLenght = newBreakLenght < 1 ? 1 : newBreakLenght;\n    newSessionLenght = newSessionLenght > 120 ? 120 : newSessionLenght;\n    newSessionLenght = newSessionLenght < 1 ? 1 : newSessionLenght;\n\n    this.setState({\n      mm: newSessionLenght,\n      ss: 0,\n      timerLabel: \"session\",\n      breakLenght: newBreakLenght,\n      sessionLenght: newSessionLenght,\n      startStop: \"start\",\n      running: false,\n    });\n    this.audio.current.pause();\n    this.audio.current.currentTime = 0;\n  }\n\n  render() {\n    const {\n      mm,\n      ss,\n      timerLabel,\n      breakLenght,\n      sessionLenght,\n      startStop,\n      runClass,\n    } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <div className=\"time-left\">\n          <div id=\"timer-label\">{timerLabel}</div>\n          <div id=\"time-left\">\n            {mm >= 10 ? mm : \"0\" + mm}:{ss >= 10 ? ss : \"0\" + ss}\n          </div>\n        </div>\n\n        <div className=\"length-box\">\n          <div className=\"break-box\">\n            <div id=\"break-label\">Break Length</div>\n            <div id=\"break-length\">{breakLenght}</div>\n            <div className=\"buttons\">\n              <button\n                className=\"add\"\n                id=\"break-increment\"\n                onClick={this.handleBreakIncrement}\n              >\n                <i className=\"fa fa-arrow-up\" />\n              </button>\n              <button\n                className=\"subtract\"\n                id=\"break-decrement\"\n                onClick={this.handleBreakDecrement}\n              >\n                <i className=\"fa fa-arrow-down\" />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"session-box\">\n            <div id=\"session-label\">Session Length</div>\n            <div id=\"session-length\">{sessionLenght}</div>\n            <div className=\"buttons\">\n              <button\n                className=\"add\"\n                id=\"session-increment\"\n                onClick={this.handleSessionIncrement}\n              >\n                <i className=\"fa fa-arrow-up\" />\n              </button>\n              <button\n                className=\"subtract\"\n                id=\"session-decrement\"\n                onClick={this.handleSessionDecrement}\n              >\n                <i className=\"fa fa-arrow-down\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons-box\">\n          <button\n            className={runClass}\n            id=\"start_stop\"\n            onClick={this.handleStartStop}\n          >\n            {startStop}\n          </button>\n          {/* <button className=\"reset\" id=\"reset\" onClick={this.handleReset}>\n            reset\n          </button> */}\n        </div>\n\n        <div className=\"buttons-box\">\n          <button\n            className=\"time_preset_purple\"\n            onClick={() => this.handleTimePreset(5, 10)}\n          >\n            5:10\n          </button>\n\n          <button\n            className=\"time_preset_purple\"\n            onClick={() => this.handleTimePreset(5, 25)}\n          >\n            5:25\n          </button>\n\n          <button\n            className=\"time_preset_purple\"\n            onClick={() => this.handleTimePreset(10, 50)}\n          >\n            10:50\n          </button>\n        </div>\n        <div className=\"buttons-box\">\n          <button\n            className=\"time_preset_yellow\"\n            onClick={() => this.handleTimePreset(10, 60)}\n          >\n            10:60\n          </button>\n\n          <button\n            className=\"time_preset_yellow\"\n            onClick={() => this.handleTimePreset(10, 70)}\n          >\n            10:70\n          </button>\n\n          <button\n            className=\"time_preset_yellow\"\n            onClick={() => this.handleTimePreset(20, 120)}\n          >\n            20:120\n          </button>\n        </div>\n        <audio\n          id=\"beep\"\n          ref={this.audio}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <Clock />\n      <div className=\"links_container\">\n        <div className=\"link\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/ReliSalazar/pomodoro-clock\"\n          >\n            <i class=\"fa fa-github\"></i> Repository\n          </a>\n        </div>\n\n        <div className=\"link\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/Reli_Salazar\"\n          >\n            <i class=\"fa fa-twitter\"></i> My twitter\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}